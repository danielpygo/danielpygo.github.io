<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Daniel Moore&#39;s Website</title>
    <link>https://danielpygo.github.io/notes/</link>
    <description>Recent content in Notes on Daniel Moore&#39;s Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Nov 2018 20:55:46 -0600</lastBuildDate>
    
	<atom:link href="https://danielpygo.github.io/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hashing</title>
      <link>https://danielpygo.github.io/notes/hashing/</link>
      <pubDate>Mon, 12 Nov 2018 20:55:46 -0600</pubDate>
      
      <guid>https://danielpygo.github.io/notes/hashing/</guid>
      <description>Cmu hashing notes
Separate Chaining  The idea is to maintain an array of linked lists All keys that hash to the same loc are just added to the linked list. Could maybe optimize these linked lists by having an lru cache implemntation or another data structure .. Cost of these operations is related to the average len of a chain. Disadvantage - costly allocation, and memory for the pointers.</description>
    </item>
    
    <item>
      <title>Kubernetes notes</title>
      <link>https://danielpygo.github.io/notes/kubernetes/</link>
      <pubDate>Mon, 12 Nov 2018 20:55:46 -0600</pubDate>
      
      <guid>https://danielpygo.github.io/notes/kubernetes/</guid>
      <description>Kubernetes github guide
Ch1 Kubelet ensures containers are running and healthy
PODS  multiple containers and storage vols One deployment multiple pods containers in the same pod has access to shared volume pods are up and running until a controller destroys them needs persistent storage they are ephemeral
Deployments Blueprint is a blueprint that deploys pods according to some spec
 Sort of like an instance of a pod</description>
    </item>
    
    <item>
      <title>Ray Tracing/Physics</title>
      <link>https://danielpygo.github.io/notes/light_physics/</link>
      <pubDate>Mon, 12 Nov 2018 20:55:46 -0600</pubDate>
      
      <guid>https://danielpygo.github.io/notes/light_physics/</guid>
      <description>Mirrors
Why do mirrors reflect: Nature of the metal  Electrons are loosely attached to metals and are able to For visible light (low frequency), the electrons can match the speed and reflect the light. For UV, it is too high so it doesn&amp;rsquo;t reflect
 Different metals reflect different wavelengths The highest frequency light reflected is called plasma frequency
 This differs between metals, steel is high
  &amp;ldquo;Mirrors reflect mainly bc they are electrically conductive&amp;rdquo;  When it hits a mirror the metal cancels out the electric field parallel to the mirror, so it changes directions and reflects away.</description>
    </item>
    
    <item>
      <title>Threads and Processes</title>
      <link>https://danielpygo.github.io/notes/threadsprocess/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://danielpygo.github.io/notes/threadsprocess/</guid>
      <description>Process is an executing program
A process can consist of multiple threads
Threads are lightweight processes used to complete small tasks; processes used for heavier tasks.
Advantages of Threads:  Lightweight Can read and write to the same data structures and resources.  Disadvantages of Threads:  IPC is difficult and errors arise Synchronization and race conditions Requires careful attention; must use a lock to prevent other threads from running a certain critical section  Advantages of Process  Independent of each other (threads are interdepedent)  Context Switching  The process of storing an d restoring context of a program so that the exectuion can be resumed from the same point at another time.</description>
    </item>
    
    <item>
      <title>GraphQL notes</title>
      <link>https://danielpygo.github.io/notes/graphql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://danielpygo.github.io/notes/graphql/</guid>
      <description>GRAPHQL BASICS  It is a query language to avoid under and overfetching from apis. Most applications today have the need to fetch data from a server where that data is stored in a database. It’s the responsibility of the API to provide an interface to the stored data that fits an application’s needs. &amp;rdquo;&amp;rsquo; Increased mobile usage, low-powered devices and sloppy networks were the initial reasons why Facebook developed GraphQL.</description>
    </item>
    
    <item>
      <title>KubePlus notes Pt. 1</title>
      <link>https://danielpygo.github.io/notes/kubeplus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://danielpygo.github.io/notes/kubeplus/</guid>
      <description>KubePlus * CaaS avoids vendor lock-in * advanced capabilities of containerized elements not possible * Kubeplus extends kubernetes with operators, different than PaaS approach * Operators extend Kubernetes API to manage software for queues, databases. Self-assemble these * Devops constructs custom PaaS, provisions, .yamls * Application Developer declares and creates application platforms as code leveraging custom resources introduced by the installed Operators.? So to find credentials the app developer may want to go and discover Postgres instances, he logs in and interacts.</description>
    </item>
    
    <item>
      <title>KubePlus notes Pt. 2</title>
      <link>https://danielpygo.github.io/notes/kubeplus-pac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://danielpygo.github.io/notes/kubeplus-pac/</guid>
      <description>What is CloudArk? CloudArk is an API Management software , aiming to get Operators enterprise-ready. The vision is an open marketplace where companies can build their platform using a declarative format. CloudFormation, at Amazon, has grown to be highly useful because it provisions infrastructure using a single yaml file. Infrastructure-as-code. However one of the major drawbacks is vendor lock-in obviously. Enterprises want flexibility when planning for the future. Furthermore, it provisions only AWS services, limiting it significantly to the products that Amazon has built or chooses to build.</description>
    </item>
    
  </channel>
</rss>